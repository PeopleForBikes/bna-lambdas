name: staging-deployment

on:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/lambda-deployment-staging.yml"
      - "Cargo.lock"
      - "Cargo.toml"
      - "lambdas/**"

permissions:
  # This is required for requesting the JWT.
  id-token: write
  # This is required for actions/checkout.
  contents: read

concurrency: ${{ github.ref }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 # v2.8.0
      - name: Install cargo lambda
        run: pip install cargo-lambda

      # Configure AWS and deploy the lambdas.
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@b47578312673ae6fa5b5096b330d9fbac3d116df # v4.2.1
        with:
          role-to-assume: ${{ secrets.FEDERATED_GITHUB_ROLE_ARN_STAGING }}
          aws-region: ${{ secrets.AWS_REGION_STAGING }}

      # Build the lambdas in release mode and deploy them.
      - name: Build all lambdas
        run: cd lambdas && cargo lambda build --release
      - name: deploy lambdas
        run: |
          LAMBDAS="bna-fargate-run
          bna-fargate-status
          bna-prepare-destination
          bna-save-results
          bna-sqs-parse
          bna-teardown
          scorecard
          "
          echo $LAMBDAS \
          | xargs -n1 -t \
            cargo lambda deploy \
            --runtime provided.al2023 \
            --iam-role ${{ secrets.LAMBDA_ROLE_ARN_STAGING }}
